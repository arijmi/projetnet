// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reservation_Foyer.Models;

#nullable disable

namespace Reservation_Foyer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240504213014_foyerun")]
    partial class foyerun
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FoyerUniversite", b =>
                {
                    b.Property<int>("FoyersId")
                        .HasColumnType("int");

                    b.Property<int>("UniversitesId")
                        .HasColumnType("int");

                    b.HasKey("FoyersId", "UniversitesId");

                    b.HasIndex("UniversitesId");

                    b.ToTable("FoyerUniversite");
                });

            modelBuilder.Entity("Reservation_Foyer.Models.Chambre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bloc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<string>("Discription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FoyerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoyerId");

                    b.ToTable("Chambre");
                });

            modelBuilder.Entity("Reservation_Foyer.Models.Foyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacite")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Foyer");
                });

            modelBuilder.Entity("Reservation_Foyer.Models.Universite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Universite");
                });

            modelBuilder.Entity("Reservation_Foyer.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ChambreId")
                        .HasColumnType("int");

                    b.Property<int>("Cin")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Phone")
                        .HasColumnType("int");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("Sex")
                        .HasColumnType("int");

                    b.Property<int>("UniversiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ChambreId");

                    b.HasIndex("UniversiteId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FoyerUniversite", b =>
                {
                    b.HasOne("Reservation_Foyer.Models.Foyer", null)
                        .WithMany()
                        .HasForeignKey("FoyersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservation_Foyer.Models.Universite", null)
                        .WithMany()
                        .HasForeignKey("UniversitesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Reservation_Foyer.Models.Chambre", b =>
                {
                    b.HasOne("Reservation_Foyer.Models.Foyer", "Foyer")
                        .WithMany("Chambres")
                        .HasForeignKey("FoyerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Foyer");
                });

            modelBuilder.Entity("Reservation_Foyer.Models.User", b =>
                {
                    b.HasOne("Reservation_Foyer.Models.Chambre", "Chambre")
                        .WithMany("Users")
                        .HasForeignKey("ChambreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Reservation_Foyer.Models.Universite", "Universite")
                        .WithMany("Users")
                        .HasForeignKey("UniversiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chambre");

                    b.Navigation("Universite");
                });

            modelBuilder.Entity("Reservation_Foyer.Models.Chambre", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Reservation_Foyer.Models.Foyer", b =>
                {
                    b.Navigation("Chambres");
                });

            modelBuilder.Entity("Reservation_Foyer.Models.Universite", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
